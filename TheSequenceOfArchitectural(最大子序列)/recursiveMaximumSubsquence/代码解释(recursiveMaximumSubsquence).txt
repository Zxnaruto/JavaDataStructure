
/**
 * @author XiaoHuZiXianShengZx
 * 
 * 这是用分治思想的递归方法来求最大子序列的和
 * 
 * 起时间复杂度为：(两个for是O(N),两个递归是2T(N/2))
 *   T(1)=1,T(N)=N+2T(N/2)
 * 推导：
 *      T(2)=2+2T(1)=2*2=4        2^1=2, 2*(1+1)
 *      T(4)=4+2T(2)=4*3=12       2^2=4, 4*(2+1)
 *      T(8)=8+2T(4)==8*4=32      2^3=8, 8*(3+1)
 *      .......
 *      N=2^k,k=logN
 *      T(2^k)=2^k+2T(2^(k-1))=N*(k+1)=N+NlogN
 *      所以T(N)=NlogN
 * 
 * 
 * 通过把数组分为两个部分，分别对两个部分进行递归，并求出左边的最大值，右边的最大值，以及
 * 加上左右边界的最大值的和（即左边递归的部分加上右边递归的部分，该递归是从中间向两边依次求和的）
 * 然后再看这三个值那个最大，最大的值即为最大子序列的和的值
 * 
 * 缺点：目前这个算法只针对N为偶数，要是也可算奇数的话，还需改进。
 *
 */